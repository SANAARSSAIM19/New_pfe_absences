/*==============================================================*/
/* Nom de SGBD :  MySQL 5.0                                     */
/* Date de cr?ation :  19/03/2023 15:13:35                      */
/*==============================================================*/


/*drop table if exists ABSENCE;

drop table if exists ADMINISTRATEUR;

drop table if exists AFFILIER;

drop table if exists ANNEE;

drop table if exists AVOIR;

drop table if exists DEPARTEMENT;

drop table if exists ELEMENT;

drop table if exists ENSEIGNANT;

drop table if exists ETUDIANT;

drop table if exists FILIERE;

drop table if exists GROUPE;

drop table if exists MODULE;

drop table if exists ROLE;

drop table if exists SEANCE;

drop table if exists SEMESTRE;

drop table if exists TRAVAILLER;

drop table if exists UTILISATEUR;*/


/*==============================================================*/
/* Table : loginad                                              */
/*==============================================================*/
/*DROP TABLE IF EXISTS `users`;*/
CREATE TABLE IF NOT EXISTS `loginad` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user` varchar(255) NOT NULL DEFAULT '0',
  `pass` varchar(255) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

/*==============================================================*/
/* Table : ABSENCE                                              */
/*==============================================================*/
create table ABSENCE
(
   ID_ADMIN             int not null,
   ID_SEANCE            int not null,
   ETAT                 text,
   STATUT               text,
   primary key (ID_ADMIN, ID_SEANCE)
);

/*==============================================================*/
/* Table : ADMINISTRATEUR                                       */
/*==============================================================*/
create table ADMINISTRATEUR
(
   NOM_USER             text,
   PRENOM_USER          text,
   DATEN_USER           date,
   CIN_USER             text,
   EMAIL_USER           text,
   PASSWORD_USER        text,
   ADRESSE_USER         text,
   TELE_USER            numeric(10,0),
   SEXE_USER            text,
   ADM_ID_USER          int,
   SERVICE_AD           text,
   ID_ADMIN             int not NULL AUTO_INCREMENT,
   primary key (ID_ADMIN) 
);

/*==============================================================*/
/* Table : AFFILIER                                             */
/*==============================================================*/
create table AFFILIER
(
   ID_ADMIN             int not null,
   ID_GROUPE            int not null,
   TYPE                 text,
   primary key (ID_ADMIN, ID_GROUPE)
);

/*==============================================================*/
/* Table : ANNEE                                                */
/*==============================================================*/
create table ANNEE
(
   ID_ANNEE             INT PRIMARY KEY AUTO_INCREMENT,
   ANNEE_UNIVERSITAIRE  date
);

/*==============================================================*/
/* Table : AVOIR                                                */
/*==============================================================*/
create table AVOIR
(
   ID_ADMIN             int not null,
   ID_ROLE              int not null,
   primary key (ID_ADMIN, ID_ROLE)
);

/*==============================================================*/
/* Table : DEPARTEMENT                                          */
/*==============================================================*/
create table DEPARTEMENT
(
   ID_DEPARTEMENT       int not NULL AUTO_INCREMENT,
   ID_ADMIN             int not null,
   ENS_ID_ADMIN         int not null,
   NOM_DEPARTEMENT      text,
   primary key (ID_DEPARTEMENT)
);

/*==============================================================*/
/* Table : ELEMENT                                              */
/*==============================================================*/
create table ELEMENT
(
   ID_ELEMENT           int not NULL AUTO_INCREMENT,
   ID_MODULE            int not null,
   ID_ADMIN             int not null,
   NOM_ELEMENT          text,
   primary key (ID_ELEMENT)
);

/*==============================================================*/
/* Table : ENSEIGNANT                                           */
/*==============================================================*/
create table ENSEIGNANT
(
   ID_ADMIN             int not NULL AUTO_INCREMENT,
   ID_DEPARTEMENT       int not null,
   DEP_ID_DEPARTEMENT   int not null,
   NOM_USER             text,
   PRENOM_USER          text,
   DATEN_USER           date,
   CIN_USER             text,
   EMAIL_USER           text,
   PASSWORD_USER        text,
   ADRESSE_USER         text,
   TELE_USER            numeric(10,0),
   SEXE_USER            text,
   ADM_ID_USER          int not null,
   TYPE_EN              text,
   primary key (ID_ADMIN)
);

/*==============================================================*/
/* Table : ETUDIANT                                             */
/*==============================================================*/
create table ETUDIANT
(
   ID_ADMIN             int not NULL AUTO_INCREMENT,
   ADM_ID_USER          int,
   NOM_USER             text,
   PRENOM_USER          text,
   DATEN_USER           date,
   CIN_USER             text,
   EMAIL_USER           text,
   PASSWORD_USER        text,
   ADRESSE_USER         text,
   TELE_USER            numeric(10,0),
   SEXE_USER            text,
   CNE_ET               text,
   NOM_TUTEUR_ET        text,
   PRENOM_TUTEUR_ET     text,
   ADRESS_PARENTIELLE_ET text,
   NIVEAU_ET            text,
   AVERTISEMENT_ET      text,
   primary key (ID_ADMIN)
);

/*==============================================================*/
/* Table : FILIERE                                              */
/*==============================================================*/
create table FILIERE
(
   ID_FILIERE_          int not NULL AUTO_INCREMENT,
   ID_DEPARTEMENT       int not null,
   NOM_FILIERE_         text,
   primary key (ID_FILIERE_)
);

/*==============================================================*/
/* Table : GROUPE                                               */
/*==============================================================*/
create table GROUPE
(
   ID_GROUPE            int not NULL AUTO_INCREMENT,
   ID_FILIERE_          int not null,
   NOM_GROUPE           text,
   TYPE_GROUPE          text,
   primary key (ID_GROUPE)
);

/*==============================================================*/
/* Table : MODULE                                               */
/*==============================================================*/
create table MODULE
(
   ID_MODULE            int not NULL AUTO_INCREMENT,
   ID_FILIERE_          int not null,
   ID_SEMESTRE          int not null,
   NOM_MODULE           text,
   primary key (ID_MODULE)
);

/*==============================================================*/
/* Table : ROLE                                                 */
/*==============================================================*/
create table ROLE
(
   ID_ROLE              int not NULL AUTO_INCREMENT,
   ROLE                 text,
   primary key (ID_ROLE)
);

/*==============================================================*/
/* Table : SEANCE                                               */
/*==============================================================*/
create table SEANCE
(
   ID_SEANCE            int not NULL AUTO_INCREMENT,
   ID_ELEMENT           int not null,
   ID_GROUPE            int not null,
   ID_ADMIN             int not null,
   HEURED_SEANCE        time,
   HEUREF_SEANCE        time,
   NUM_SALLE            int,
   primary key (ID_SEANCE)
);

/*==============================================================*/
/* Table : SEMESTRE                                             */
/*==============================================================*/
create table SEMESTRE
(
   ID_SEMESTRE          int not NULL AUTO_INCREMENT,
   NUM_SEMESTRE         int,
   DATED_SEMESTRE       date,
   DATEF_SEMESTRE       date,
   primary key (ID_SEMESTRE)
);

/*==============================================================*/
/* Table : TRAVAILLER                                           */
/*==============================================================*/
create table TRAVAILLER
(
   ID_ADMIN             int not null,
   ID_DEPARTEMENT       int not null,
   primary key (ID_ADMIN, ID_DEPARTEMENT)
);

/*==============================================================*/
/* Table : UTILISATEUR                                          */
/*==============================================================*/
create table UTILISATEUR
(
   ID_ADMIN             int not NULL AUTO_INCREMENT,
   NOM_USER             text,
   PRENOM_USER          text,
   DATEN_USER           date,
   CIN_USER             text,
   EMAIL_USER           text,
   PASSWORD_USER        text,
   ADRESSE_USER         text,
   TELE_USER            numeric(10,0),
   SEXE_USER            text,
   primary key (ID_ADMIN)
);

alter table ABSENCE add constraint FK_ABSENCE foreign key (ID_SEANCE)
      references SEANCE (ID_SEANCE) on delete restrict on update restrict;

alter table ABSENCE add constraint FK_ABSENCE2 foreign key (ID_ADMIN)
      references ETUDIANT (ID_ADMIN) on delete restrict on update restrict;

alter table AFFILIER add constraint FK_AFFILIER foreign key (ID_GROUPE)
      references GROUPE (ID_GROUPE) on delete restrict on update restrict;

alter table AFFILIER add constraint FK_AFFILIER2 foreign key (ID_ADMIN)
      references ETUDIANT (ID_ADMIN) on delete restrict on update restrict;

alter table AVOIR add constraint FK_AVOIR foreign key (ID_ADMIN)
      references UTILISATEUR (ID_ADMIN) on delete restrict on update restrict;

alter table AVOIR add constraint FK_AVOIR2 foreign key (ID_ROLE)
      references ROLE (ID_ROLE) on delete restrict on update restrict;

alter table DEPARTEMENT add constraint FK_ETRE_CHEF foreign key (ENS_ID_ADMIN)
      references ENSEIGNANT (ID_ADMIN) on delete restrict on update restrict;

alter table DEPARTEMENT add constraint FK_ETRE_CHEF2 foreign key (ID_ADMIN)
      references ENSEIGNANT (ID_ADMIN) on delete restrict on update restrict;

alter table ELEMENT add constraint FK_COMPORTER foreign key (ID_MODULE)
      references MODULE (ID_MODULE) on delete restrict on update restrict;

alter table ELEMENT add constraint FK_ENSEIGNER_PAR foreign key (ID_ADMIN)
      references ENSEIGNANT (ID_ADMIN) on delete restrict on update restrict;

/*alter table ENSEIGNANT add constraint FK_HERITAGE_4 foreign key (ID_ADMIN)
      references UTILISATEUR (ID_ADMIN) on delete restrict on update restrict;

alter table ETUDIANT add constraint FK_HERITAGE_5 foreign key (ID_ADMIN)
      references UTILISATEUR (ID_ADMIN) on delete restrict on update restrict;*/

alter table FILIERE add constraint FK_COMPRENDRE foreign key (ID_DEPARTEMENT)
      references DEPARTEMENT (ID_DEPARTEMENT) on delete restrict on update restrict;

alter table GROUPE add constraint FK_APPARTENIR foreign key (ID_FILIERE_)
      references FILIERE (ID_FILIERE_) on delete restrict on update restrict;

alter table MODULE add constraint FK_CONTENIR foreign key (ID_FILIERE_)
      references FILIERE (ID_FILIERE_) on delete restrict on update restrict;

alter table MODULE add constraint FK_TROUVER foreign key (ID_SEMESTRE)
      references SEMESTRE (ID_SEMESTRE) on delete restrict on update restrict;

alter table SEANCE add constraint FK_ASSISTER foreign key (ID_GROUPE)
      references GROUPE (ID_GROUPE) on delete restrict on update restrict;

alter table SEANCE add constraint FK_ENSEIGNER foreign key (ID_ADMIN)
      references ENSEIGNANT (ID_ADMIN) on delete restrict on update restrict;

alter table SEANCE add constraint FK_INCLURE foreign key (ID_ELEMENT)
      references ELEMENT (ID_ELEMENT) on delete restrict on update restrict;

alter table TRAVAILLER add constraint FK_TRAVAILLER foreign key (ID_ADMIN)
      references ENSEIGNANT (ID_ADMIN) on delete restrict on update restrict;

alter table TRAVAILLER add constraint FK_TRAVAILLER2 foreign key (ID_DEPARTEMENT)
      references DEPARTEMENT (ID_DEPARTEMENT) on delete restrict on update restrict;

alter table UTILISATEUR add constraint FK_GERER foreign key (ID_ADMIN)
      references ADMINISTRATEUR (ID_ADMIN) on delete restrict on update restrict;

